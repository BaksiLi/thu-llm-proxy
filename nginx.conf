worker_processes auto;
events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Add resolver for DNS resolution
    resolver 8.8.8.8 valid=30s;

    lua_shared_dict my_cache 10m;  # Shared memory for Lua

    server {
        listen ${PROXY_PORT};  # Listen on the port defined in the environment
        server_name ${HOST_ADDRESS}; # Use the HOST_ADDRESS from environment

        # Set the variable for upstream to enable DNS resolution
        set $upstream_endpoint https://madmodel.cs.tsinghua.edu.cn;

        location / {
            proxy_pass $upstream_endpoint;
            proxy_http_version 1.1;
            proxy_set_header Host madmodel.cs.tsinghua.edu.cn;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Authorization $http_authorization;
            proxy_set_header Content-Type $http_content_type;

            # Enable streaming mode
            chunked_transfer_encoding on;
            proxy_buffering off;
            proxy_request_buffering off;

            # Increase timeouts for long-running requests
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;

            # Apply Lua body filter to process response chunks
            body_filter_by_lua_file /usr/local/openresty/nginx/conf/filter_empty_chunks.lua;
        }
    }
}

